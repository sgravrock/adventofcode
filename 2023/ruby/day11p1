#!/usr/bin/env ruby

def expand_rows(grid)
	i = 0
	while i < grid.length do
		if grid[i].all?('.') then
			grid.insert(i, Array.new(grid[i].length, '.'))
			i += 2
		else
			i += 1
		end
	end
end

def expand_cols(grid)
	j = 0
	while j < grid[0].length do
		if grid.all? { |row| row[j] == '.' } then
			grid.each do |row|
				row.insert(j, '.')
			end
	
			j += 2
		else
			j += 1
		end
	end
end

def galaxies(grid)
	grid.each_with_index
		.flat_map { |row, y| 
			row.each_with_index.map { |cell, x| [x, y, cell] }
		}
		.filter { |_, _, cell| cell == '#' }
end

def galaxy_pairs(grid)
	gs = galaxies(grid)
	r = []

	(0..gs.length - 1).each do |i|
		(i + 1..gs.length - 1).each do |j|
			r.push([gs[i], gs[j]])
		end
	end

	r
end

def manhattan(a, b)
	(a[0] - b[0]).abs + (a[1] - b[1]).abs
end


grid = ARGF.read.split("\n").map(&:chars)
expand_rows(grid)
expand_cols(grid)
puts galaxy_pairs(grid).map {|a, b| manhattan(a, b) }.sum

