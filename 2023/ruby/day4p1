#!/usr/bin/env ruby

Card = Data.define(:winning, :have) do
	def score
		s = 0
		self.have.each do |h|
			if winning.include? h then
				if s == 0 then
					s = 1
				else
					s *= 2;
				end
			end
		end
	
		s
	end
end

def to_numbers(s)
	s.gsub('  ', ' ').split(' ').map(&:to_i)
end

def parse_card(line)
	line.match /^Card +([\d]+): (.*) \| (.*)$/ or raise "Invalid line: #{line}"
	id = $1.to_i
	ws = $2
	hs = $3
	Card.new(to_numbers(ws), to_numbers(hs))
end

result = DATA.read.split("\n")
	.map { |line| parse_card(line).score }
	.sum
puts result


__END__
Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53
Card 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19
Card 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1
Card 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83
Card 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36
Card 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11
