#!/usr/bin/env ruby

WINNING_HANDS = [
	[1, 1, 1, 1, 1],
	[1, 1, 1, 2],
	[1, 2, 2],
	[1, 1, 3],
	[2, 3],
	[1, 4],
	[5]
]
CARD_VALS = %w[J 2 3 4 5 6 7 8 9 T Q K A]
	.each_with_index
	.to_h

Hand = Data.define(:cards, :bid) do
	def sort_vals
		[type_strength] + cards.map { |c| CARD_VALS[c] }
	end

	def type_strength
		non_jokers = cards.reject { |c| c == 'J' }

		if non_jokers.empty? then
			tallies = [5]
		else
			tallies = non_jokers.tally.values.sort
			tallies[tallies.count - 1] += 5 - non_jokers.count
		end

		WINNING_HANDS.index(tallies)
	end
end

hands = DATA.read.split("\n")
	.map { |line|
		words = line.split(' ')
		cards = words[0].chars
		bid = words[1].to_i
		Hand.new(cards, bid)
	}
	.sort_by { |h| h.sort_vals }

result = hands
	.each_with_index
	.map { |hand, i|
		rank = i + 1
		hand.bid * rank
	} 
	.sum

puts result

__END__
32T3K 765
T55J5 684
KK677 28
KTJJT 220
QQQJA 483
